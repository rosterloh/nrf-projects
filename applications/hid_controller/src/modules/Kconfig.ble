menu "BLE"

comment "BLE State"

config CONTROLLER_BLE_ENABLE_PASSKEY
	bool "Enable passkey based pairing"
	depends on !CONTROLLER_PASSKEY_NONE
	depends on BT_PERIPHERAL
	help
	  Enable passkey based pairing for increased security.

module = CONTROLLER_BLE_STATE
module-str = BLE state
source "subsys/logging/Kconfig.template.log_config"


comment "BLE Bond"

config CONTROLLER_BLE_USE_DEFAULT_ID
	bool "Use default Bluetooth local identity"
	depends on BT_PERIPHERAL
	help
	  Bluetooth default local identity is used as ID 0. This identity
	  cannot be reset. After bond for the default identity is removed,
	  it is not longer used.

config CONTROLLER_BLE_PEER_CONTROL
	bool "Enable interaction with peer configuration"
	depends on !CONTROLLER_BUTTONS_NONE
	help
	  Let user control Bluetooth peers by pressing a dedicated button.

if CONTROLLER_BLE_PEER_CONTROL

config CONTROLLER_BLE_PEER_CONTROL_BUTTON
	hex "Key ID of button used to control peers"
	range 0x0000 0xffff
	help
	  Button which should be used to control bonded Bluetooth peers.

config CONTROLLER_BLE_PEER_SELECT
	bool "Enable switching between peers"
	depends on BT_PERIPHERAL
	help
	  Short click to switch peer. Double click to accept choice.

config CONTROLLER_BLE_NEW_PEER_SCAN_REQUEST
	bool "Enable scanning on request"
	depends on BT_CENTRAL
	help
	  Short click to start new peer scanning. When enabled the device will
	  look for non-bonded devices only when requested.
	  When disabled the device always search for non-bonded devices while
	  scanning.
	  Regardless of the choice made the device scans periodically for
	  already bonded peers.

config CONTROLLER_BLE_NEW_PEER_SCAN_ON_BOOT
	bool "Look for peers after boot"
	depends on CONTROLLER_BLE_NEW_PEER_SCAN_REQUEST
	help
	  When enabled the device will look for new peers also after it was
	  booted.

config CONTROLLER_BLE_PEER_ERASE
	bool "Enable peer erase"
	help
	  Long click to start erase. Double click to confirm.

config CONTROLLER_BLE_PEER_ERASE_ON_START
	bool "Enable peer erase (on system start)"
	depends on BT_PERIPHERAL
	help
	  Hold dedicated button during system start to erase peer.
endif

if !CONTROLLER_BLE_PEER_CONTROL

config CONTROLLER_BLE_PEER_CONTROL_BUTTON
	hex
	default 0x0000

endif

config CONTROLLER_BLE_DONGLE_PEER_ENABLE
	bool "Enable dongle peer"
	help
	  Enable additional peer to connect with dongle.

config CONTROLLER_BLE_DONGLE_PEER_SELECTOR_ID
	int "Dongle peer selector ID"
	range 0 255
	default 0

config CONTROLLER_BLE_DONGLE_PEER_SELECTOR_POS
	int "Dongle peer selector position"
	range 0 255
	default 0

module = CONTROLLER_BLE_BOND
module-str = BLE bonds
source "subsys/logging/Kconfig.template.log_config"


comment "BLE Advertising"

config CONTROLLER_BLE_ADVERTISING_ENABLE
	bool "Enable BLE advertising"
	depends on BT_PERIPHERAL
	help
	  Make device discoverable via BLE.

config CONTROLLER_BLE_SHORT_NAME
	string "Short device name used for advertising"
	default ""
	depends on CONTROLLER_BLE_ADVERTISING_ENABLE

config CONTROLLER_BLE_DIRECT_ADV_AVAILABLE
	bool
	default y if BT_PERIPHERAL
	default y if BT_CENTRAL && BT_SCAN_WITH_IDENTITY

config CONTROLLER_BLE_DIRECT_ADV
	bool "Advertise to bonded peer directly"
	depends on CONTROLLER_BLE_ADVERTISING_ENABLE
	depends on CONTROLLER_BLE_DIRECT_ADV_AVAILABLE
	help
	  Device will use direct advertising if bonded.

config CONTROLLER_BLE_FAST_ADV
	bool "Enable period of fast advertising"
	depends on CONTROLLER_BLE_ADVERTISING_ENABLE
	help
	  Device will initially advertise with shorter interval.

config CONTROLLER_BLE_FAST_ADV_TIMEOUT
	int "Time of initial fast advertising [s]"
	default 30
	depends on CONTROLLER_BLE_FAST_ADV
	help
	  Device will initially advertise with shorter interval to enable
	  quicker discovery by hosts. After this time it will shift to normal
	  cadence advertising.

config CONTROLLER_BLE_SWIFT_PAIR
	bool "Enable Swift Pair feature"
	depends on CONTROLLER_BLE_ADVERTISING_ENABLE
	depends on CONTROLLER_BLE_FAST_ADV
	help
	  Enable quick pairing with Microsoft Swift Pair.

config CONTROLLER_BLE_SWIFT_PAIR_GRACE_PERIOD
	int "No Swift Pair time gap before suspend [s]"
	default 30
	depends on CONTROLLER_POWER_MANAGER_ENABLE
	depends on CONTROLLER_BLE_SWIFT_PAIR
	help
	  To ensure users will not try to connect to a device which is no longer
	  available, Swift Pair vendor section will be removed before exiting
	  from advertising mode.

if CONTROLLER_BLE_ADVERTISING_ENABLE

module = CONTROLLER_BLE_ADV
module-str = BLE advertising
source "subsys/logging/Kconfig.template.log_config"

endif


comment "BLE Scanning"

config CONTROLLER_BLE_SCANNING_ENABLE
	bool "Enable BLE scanning"
	default n
	depends on BT_CENTRAL
	help
	  Enable device to scan for peripheral devices.

config CONTROLLER_BLE_SCAN_START_TIMEOUT_S
	int "Scan start timeout [s]"
	default 5
	depends on CONTROLLER_BLE_SCANNING_ENABLE
	help
	  After disabled, scanning is re-enabled after defined time of connected
	  peripherals inactivity (scanning has negative impact on user
	  experience - e.g. may cause mouse pointer lags).

config CONTROLLER_BLE_SCAN_DURATION_S
	int "Scan duration [s]"
	default 5
	depends on CONTROLLER_BLE_SCANNING_ENABLE
	help
	  After this time scan is disabled if any peripheral is connected.

if CONTROLLER_BLE_SCANNING_ENABLE

module = CONTROLLER_BLE_SCANNING
module-str = BLE scanning
source "subsys/logging/Kconfig.template.log_config"

endif


comment "BLE Discovery"

config CONTROLLER_BLE_DISCOVERY_ENABLE
	bool "Enable BLE discovery"
	depends on CONTROLLER_BLE_SCANNING_ENABLE
	help
	  Enable device to read Device Information Service and discover HIDS.

if CONTROLLER_BLE_DISCOVERY_ENABLE

module = CONTROLLER_BLE_DISCOVERY
module-str = BLE discovery
source "subsys/logging/Kconfig.template.log_config"

endif

comment "BLE Latency"

if BT_PERIPHERAL

config CONTROLLER_BLE_SECURITY_FAIL_TIMEOUT_S
	int "Security fail timeout [s]"
	default 10
	help
	  After this time peripheral device disconnects if security is not
	  established.

module = CONTROLLER_BLE_LATENCY
module-str = BLE latency
source "subsys/logging/Kconfig.template.log_config"

endif

comment "BLE QoS management"

config CONTROLLER_BLE_QOS_ENABLE
	bool "Enable BLE channel map management"
	depends on BT_CENTRAL
	depends on BT_LL_NRFXLIB
	select BT_HCI_VS_EVT_USER
	help
	  Enable device to avoid congested RF channels.

config CONTROLLER_BLE_QOS_INTERVAL
	int "Processing interval for QoS thread [ms]"
	default 1000
	depends on CONTROLLER_BLE_QOS_ENABLE
	help
	  Configure processing interval for QoS algorithm.
	  Longer intervals means more time to accumulate CRC stats,
	  and vice versa.

config CONTROLLER_BLE_QOS_STACK_SIZE
	int "Base stack size for QoS thread"
	default 240
	depends on CONTROLLER_BLE_QOS_ENABLE
	help
	  Configure base stack size for QoS processing thread.

config CONTROLLER_BLE_QOS_STATS_PRINTOUT_ENABLE
	bool "Enable BLE QoS statistics printout"
	depends on CONTROLLER_BLE_QOS_ENABLE
	select USB_COMPOSITE_DEVICE
	select USB_CDC_ACM
	select SERIAL
	select UART_LINE_CTRL
	select UART_INTERRUPT_DRIVEN
	help
	  Enable to get real-time QoS information printouts via CDC ACM.

config CONTROLLER_BLE_QOS_STATS_PRINT_STACK_SIZE
	int "Stack size addition for QoS printout"
	default 784
	depends on CONTROLLER_BLE_QOS_STATS_PRINTOUT_ENABLE
	help
	  This size increase is added to the QoS base stack size
	  to facilitate statistics printout.

if CONTROLLER_BLE_QOS_ENABLE

module = CONTROLLER_BLE_QOS
module-str = BLE channel map management
source "subsys/logging/Kconfig.template.log_config"

endif

endmenu
